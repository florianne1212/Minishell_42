Pour fonction control
-une seule fonction qui recupere le numero devrait suffire, et on envoie a  $? 128 + n (enzo idea)
-ft_putstr_fd("\b\b  \b\b", 1); a mettre : permet d'effacer ce que le shell ecrit (^C ou ^\)
(merci enzo encore)

Pour le main et exit
-il faut comparer le premier arg a exit , ou exit\t et exit space
-Clean exit a faire en faisant des free pour toute la structure globale
-Ne pas oublier d'initialiser toute la structure globale en tout debut de programme

Dans lexline
mettre strlen en variable et appeler cette variable (accelere +++)

pourquoi a la fin de output on a index ++ dans putoutput




Interrogations
- control + D : envoie EOF, ce qui vient faire chier notre get next line qui sert a recuperer la ligne de commande
il faut donc quand gnl renvoie 0 etre sur que c'est bien la fin de notre ligne et non pas le control +c
(aucune, mais aucune idee de comment faire.....)

-Fork : apparement il faut fork potentiellement plusieurs choses a la fois (bash lance plusieurs processus en meme temps)
mais d'un autre cote, il ne faut pas que l'invite de commande arrive trop vient
apparemment il aut utiliser waitfid avec -1 en premier param, faut il utiliser les autres param ? a voir

- Les pipes : a priori il faut creer 2 pipes : un pour le fils pour lui amener les infos, un pour renvoyer les infos au pere
dans le pere et le fils , il faut fermet le bout de tuyau qui ne sert pas, et lier le bon bout de tuyau a stdin et stdout